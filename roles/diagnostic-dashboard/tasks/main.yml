---

  - name: Install meteor
    shell: curl https://install.meteor.com | /bin/sh chdir=/tmp creates=/usr/local/bin/meteor
    sudo: yes
    sudo_user: root

  - name: Install meteor npm modules
    npm: name={{ item }} global=yes state=present
    sudo: yes
    sudo_user: root
    with_items:
      - meteorite
      - forever

  - name: Copy diagnostic dashboard source
    copy: src=diagnostic-dashboard/ dest={{ diagnostic_dashboard_prefix }}-source
    register: dashboard_copy
  
  - name: Remove diagnostic dashboard directory
    file: path={{ diagnostic_dashboard_prefix }} state=absent
    sudo: yes
    sudo_user: root
    when: dashboard_copy.changed
  
  # The source directory is kept separate so it doesn't appear to be changed
  # because of the subsequent processing
  - name: Replace diagnostic dashboard deployment directory with the updated source
    command: cp -r {{ diagnostic_dashboard_prefix }}-source {{ diagnostic_dashboard_prefix }}
    when: dashboard_copy.changed
    
  - name: Create config
    template: src=config.j2 dest={{ diagnostic_dashboard_prefix }}/config mode=0755
    when: dashboard_copy.changed

  - name: Remove bundle directory
    file: path={{ diagnostic_dashboard_prefix }}/bundle state=absent
    when: dashboard_copy.changed

  - name: mrt update
    command: mrt update chdir={{ diagnostic_dashboard_prefix }}
    when: dashboard_copy.changed

  - name: mrt bundle
    command: mrt bundle bundle.tgz chdir={{ diagnostic_dashboard_prefix }}
    when: dashboard_copy.changed

  - name: Unarchive bundle
    unarchive: src={{ diagnostic_dashboard_prefix }}/bundle.tgz dest={{ diagnostic_dashboard_prefix }} copy=no
    when: dashboard_copy.changed

  - name: Remove fibers from bundle
    file: path={{ diagnostic_dashboard_prefix }}/bundle/programs/server/node_modules/fibers state=absent
    when: dashboard_copy.changed

  - name: Install fibers by npm into bundle
    npm: name=fibers production=yes path={{ diagnostic_dashboard_prefix }}/bundle/programs/server
    when: dashboard_copy.changed
    
  - name: Install supervisord config
    template: src=dashboardd.conf.j2 dest=/etc/supervisor/conf.d/dashboardd.conf
    sudo: yes
    sudo_user: root
    notify: reload supervisor
    with_items:
      - dashboard

  - name: Restart dashboard process
    supervisorctl: name="dashboard" state=restarted
    when: dashboard_copy.changed
    sudo: yes
    sudo_user: root

  - name: Autocomplete collection
    command: mongo .scripts/autocompleteCollections.js
    args:
      chdir: "{{ diagnostic_dashboard_prefix }}"
    when: dashboard_copy.changed

