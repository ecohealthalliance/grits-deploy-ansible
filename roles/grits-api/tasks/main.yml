---

  - name: Install apt dependencies
    apt: name={{ item }}
    with_items:
      - gfortran
      - libopenblas-dev
      - liblapack-dev
      - lib32z1-dev
      - zip
      - unzip
      - libxml2-dev
      - libxslt1-dev
    sudo: yes
    sudo_user: root

  - name: Copy grits-api
    copy: src=grits-api/ dest={{ grits_api_prefix }}
    notify: restart grits api group

  - name: Configure grits-api
    template: src=config.py.j2 dest={{ grits_api_prefix }}/config.py

  - name: Install requirements
    pip: requirements={{ grits_api_prefix }}/requirements.txt virtualenv={{ grits_api_prefix }}/env

  # This should be added to requirements.txt
  - name: Install nose
    pip: name=nose virtualenv={{ grits_api_prefix }}/env

  - name: Download nltk data
    shell: "{{ grits_api_prefix }}/env/bin/python -c \"import nltk; nltk.download('{{ item }}')\" && echo done > .nltk_{{ item }}_downloaded"
    args:
      chdir: /home/{{ grits_user }}
      creates: /home/{{ grits_user }}/.nltk_{{ item }}_downloaded
    with_items:
      - maxent_ne_chunker
      - maxent_treebank_pos_tagger
      - words
      - punkt
    sudo: yes
    sudo_user: "{{ grits_user }}"
    notify: restart grits api group

  - name: Copy annie
    copy: src=annie/ dest={{ annie_prefix }}
    notify: restart grits api group

  - name: Install annie
    shell: "{{ grits_api_prefix }}/env/bin/python setup.py install && echo done > .annie_installed"
    args:
      chdir: "{{ annie_prefix }}"
      creates: "{{ annie_prefix }}/.annie_installed"

  - name: Download geonames data
    get_url: url=http://download.geonames.org/export/dump/allCountries.zip dest={{ annie_prefix }}/allCountries.zip

  - name: Extract geonames zip
    unarchive:
      src: "{{ annie_prefix }}/allCountries.zip"
      dest: "{{ annie_prefix }}"
      copy: no
      creates: "{{ annie_prefix }}/allCountries.txt"

  - name: Import geonames database
    shell: "{{ grits_api_prefix }}/env/bin/python mongo_import_geonames.py --mongo_url {{ mongo_url }} && echo done > .geonames.imported"
    args:
      chdir: "{{ annie_prefix }}"
      creates: "{{ annie_prefix }}/.geonames.imported"
    sudo: yes
    sudo_user: "{{ grits_user }}"

  - name: Training
    shell: "{{ grits_api_prefix }}/env/bin/python train.py"
    args:
      chdir: "{{ grits_api_prefix }}"
      creates: "{{ grits_api_prefix }}/keyword_array.p"
    tags:
      - train
    notify: restart grits api group

  - name: Install supervisord configs
    template: src={{ item }}.conf.j2 dest=/etc/supervisor/conf.d/{{ item }}.conf
    notify: reload supervisor
    sudo: yes
    sudo_user: root
    with_items:
      - celeryd
      - gritsapid

  - name: Install flower supervisord config
    template: src=flowerd.conf.j2 dest=/etc/supervisor/conf.d/flowerd.conf
    notify: reload supervisor
    sudo: yes
    sudo_user: root
    when: flower_password != ""

  - name: Copy cron script
    template:
      src: diagnose_girder_HM_articles.j2
      dest: "{{ cron_prefix }}/diagnose_girder_HM_articles"
      group: "{{ grits_group }}"
      owner: "{{ grits_user }}"
      mode: 0755

  - name: Install healthmap diagnosis cron job
    cron:
      name: "Diagnose healthmap articles"
      user: "{{ grits_user }}"
      job: "{{ cron_prefix }}/diagnose_girder_HM_articles"
      day: 26
      hour: 3
      minute: 0
    when: run_cron_jobs
