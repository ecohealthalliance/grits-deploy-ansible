---

  - name: Install apt dependencies
    apt: name={{ item }}
    with_items:
      - gfortran
      - libopenblas-dev
      - liblapack-dev
      - lib32z1-dev
      - zip
      - unzip
      - libxml2-dev
      - libxslt1-dev
    sudo: yes
    sudo_user: root

  - name: Copy grits-api
    copy: src=grits-api/ dest={{ grits_api_prefix }}
    register: grits_api_output

  - name: Configure grits-api
    template: src=config.py.j2 dest={{ grits_api_prefix }}/config.py

  - name: Install requirements
    pip: requirements={{ grits_api_prefix }}/requirements.txt virtualenv={{ grits_api_prefix }}/env

  # This should be added to requirements.txt
  - name: Install nose
    pip: name=nose virtualenv={{ grits_api_prefix }}/env

  - name: Download nltk data
    command: "{{ grits_api_prefix }}/env/bin/python -c \"import nltk; nltk.download('{{ item }}')\""
    with_items:
      - maxent_ne_chunker
      - maxent_treebank_pos_tagger
      - words
      - punkt

  - name: Download geonames data
    get_url: url=http://download.geonames.org/export/dump/allCountries.zip dest={{ grits_api_prefix }}/allCountries.zip

  - name: Extract geonames zip
    unarchive:
      src: "{{ grits_api_prefix }}/allCountries.zip"
      dest: "{{ grits_api_prefix }}/diagnosis"
      copy: no
      creates: "{{ grits_api_prefix }}/diagnosis/allCountries.txt"
    notify: import geonames database

  - name: Copy annie
    copy: src=annie/ dest={{ annie_prefix }}
    register: annie_output

  - name: Install annie
    command: "{{ grits_api_prefix }}/env/bin/python setup.py install chdir={{ annie_prefix }}"

  # This command fails at the end
  - name: training
    command: "{{ grits_api_prefix }}/env/bin/python train.py"
    args:
      chdir: "{{ grits_api_prefix }}"
      creates: "{{ grits_api_prefix }}/keyword_sets.p"
    ignore_errors: yes
    tags:
      - train
