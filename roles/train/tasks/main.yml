---
- apt: name=expect-dev state=present

# Classifiers are not kept in the grits-api folder so the repo can be cleaned
# without wiping them out.
- set_fact: classifier_name="{{ansible_date_time.epoch}}"
- set_fact: classifier_path="/home/grits/classifiers/{{classifier_name}}"

- debug: msg="To see the training results run this. tail -f {{classifier_path}}/train.log"

- file: path={{classifier_path}} state=directory

- name: Stop grits api group to reclaim memory
  ignore_errors: yes
  supervisorctl: name="gritsapigroup:" state=stopped
  sudo: yes

- name: Stop tomcat7 to reclaim memory
  ignore_errors: yes
  service: name=tomcat7 state=stopped enabled=yes
  sudo: yes

- name: Create database directory
  file: path="/home/{{ grits_user }}/promed_dump" state=directory owner="{{ grits_user }}"

- name: Download promed db promed_dump from s3
  command: "aws s3 cp --recursive s3://promed-database/dump /home/{{ grits_user }}/promed_dump"
  sudo: yes
  sudo_user: "{{ grits_user }}"

- name: Import promed articles from db dump
  command: "mongorestore /home/{{ grits_user }}/promed_dump/promed --db promed --drop"

- name: Training classifier
  shell: "unbuffer {{ grits_env }}/bin/python train.py -pickle_dir {{classifier_path}} | tee {{classifier_path}}/train.log"
  args:
    chdir: "{{ grits_api_prefix }}"
  sudo: yes

- stat: path={{classifier_path}}/classifier.p
  register: classifier

- assert:
    that: classifier.stat.exists

- name: Backup the classifier to S3
  command: aws s3 cp --recursive {{classifier_path}} s3://classifier-data/classifiers/{{ classifier_name }}
  sudo: yes
  sudo_user: "{{ grits_user }}"
  when: girder_data_access_key is defined

- name: Start tomcat
  service: name=tomcat7 state=started enabled=yes
  sudo: yes
  ignore_errors: yes

- name: Start grits api group
  supervisorctl: name="gritsapigroup:" state=started
  sudo: yes
  ignore_errors: yes
